# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Deploy to Amazon ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-2                   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: myrepo1           # set this to your Amazon ECR repository name
  ECS_SERVICE: demo-container-1-service                # set this to your Amazon ECS service name
  ECS_CLUSTER: demo-cluster-1                 # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: ./8ks/task-definition.json # set this to the path to your Amazon ECS task definition
                                               # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: demo-container-1           # set this to the name of the container in the
                                               # containerDefinitions section of your task definition

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'
          server-id: docker.io
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          
      - name: Building and Pushing user-service
        run: mvn package dockerfile:push --file pizza-ms-msa-order-backend/pom.xml
        env:
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          
   

      - name: Check out code
        uses: actions/checkout@v2

      - name: Install kubectl
        uses: azure/setup-kubectl@v1
        with:
         version: 'v1.21.3'
        id: install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: us-east-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Load secrets and save to app.env
        run: aws secretsmanager get-secret-value --secret-id simple_bank --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > app.env
      
         
      #- name: Update kube config
        #run: aws eks update-kubeconfig --name demo-cluster-1 --region us-east-2 --role-arn arn:aws:iam::823309086506:root

      - name: Deploy image to Amazon EKS
        run: |
         kubectl apply -f k8s/aws-auth.yaml
         kubectl apply -f k8s/deployment.yaml
         kubectl apply -f k8s/order-service.yaml
