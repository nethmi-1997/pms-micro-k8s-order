# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: SpringBoot CI/CD Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: demo-cluster-1
  GKE_ZONE: us-central1-c

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'
          server-id: docker.io
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          
      - name: Building and Pushing user-service
        run: mvn package dockerfile:push --file pizza-ms-msa-auth-backend/pom.xml
        env:
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Building and Pushing cloud-config-server
        run: mvn package dockerfile:push --file cloud-config-server/pom.xml
        env:
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Building and Pushing api-gateway
        run: mvn package dockerfile:push --file api-gateway/pom.xml
        env:
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Building and Pushing service-registry
        run: mvn package dockerfile:push --file service-registry/pom.xml
        env:
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  Deploy:
  
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: kubectl - Google Cloud GKE Cluster.
      uses: ameydev/gke-kubectl-action@master
      env:
        PROJECT_ID: ${{ env.PROJECT_ID }}
        APPLICATION_CREDENTIALS: ${{ secrets.GKE_SA_KEY }}
        CLUSTER_NAME: ${{ env.GKE_CLUSTER }}
        ZONE_NAME: ${{ env.GKE_ZONE }}
      with:
        args: apply -f k8s/
